// This file is auto-generated by @hey-api/openapi-ts

export type UpdateWeatherData = {
    body: {
        [key: string]: {
            [key: string]: unknown
        }
    }
    path?: never
    query?: never
    url: "/simulation/weather/update"
}

export type UpdateWeatherResponses = {
    /**
     * OK
     */
    200: string
}

export type UpdateWeatherResponse = UpdateWeatherResponses[keyof UpdateWeatherResponses]

export type StopSimulationData = {
    body?: never
    path?: never
    query?: never
    url: "/simulation/stop"
}

export type StopSimulationResponses = {
    /**
     * OK
     */
    200: string
}

export type StopSimulationResponse = StopSimulationResponses[keyof StopSimulationResponses]

export type StartSimulationData = {
    body: string
    path?: never
    query?: never
    url: "/simulation/start"
}

export type StartSimulationResponses = {
    /**
     * OK
     */
    200: string
}

export type StartSimulationResponse = StartSimulationResponses[keyof StartSimulationResponses]

export type SetSpeedData = {
    body?: never
    path?: never
    query: {
        factor: number
    }
    url: "/simulation/control/speed"
}

export type SetSpeedResponses = {
    /**
     * OK
     */
    200: string
}

export type SetSpeedResponse = SetSpeedResponses[keyof SetSpeedResponses]

export type ResumeSimulationData = {
    body?: never
    path?: never
    query?: never
    url: "/simulation/control/resume"
}

export type ResumeSimulationResponses = {
    /**
     * OK
     */
    200: string
}

export type ResumeSimulationResponse = ResumeSimulationResponses[keyof ResumeSimulationResponses]

export type PauseSimulationData = {
    body?: never
    path?: never
    query?: never
    url: "/simulation/control/pause"
}

export type PauseSimulationResponses = {
    /**
     * OK
     */
    200: string
}

export type PauseSimulationResponse = PauseSimulationResponses[keyof PauseSimulationResponses]

export type LoadSpikeData = {
    body?: never
    path?: never
    query: {
        name: string
        ticks?: number
        rate?: number
    }
    url: "/events/loadSpike"
}

export type LoadSpikeResponses = {
    /**
     * OK
     */
    200: string
}

export type LoadSpikeResponse = LoadSpikeResponses[keyof LoadSpikeResponses]

export type BreakSourceData = {
    body?: never
    path?: never
    query: {
        name: string
        ticks?: number
    }
    url: "/events/breakComponent"
}

export type BreakSourceResponses = {
    /**
     * OK
     */
    200: string
}

export type BreakSourceResponse = BreakSourceResponses[keyof BreakSourceResponses]

export type BlackoutData = {
    body?: never
    path?: never
    query?: {
        ticks?: number
    }
    url: "/events/blackout"
}

export type BlackoutResponses = {
    /**
     * OK
     */
    200: string
}

export type BlackoutResponse = BlackoutResponses[keyof BlackoutResponses]

export type GetAllLogsData = {
    body?: never
    path?: never
    query?: never
    url: "/simulation/logs"
}

export type GetAllLogsResponses = {
    /**
     * OK
     */
    200: {
        [key: string]: Array<string>
    }
}

export type GetAllLogsResponse = GetAllLogsResponses[keyof GetAllLogsResponses]

export type GetLogsForAgentData = {
    body?: never
    path: {
        agentName: string
    }
    query?: never
    url: "/simulation/logs/{agentName}"
}

export type GetLogsForAgentResponses = {
    /**
     * OK
     */
    200: Array<string>
}

export type GetLogsForAgentResponse = GetLogsForAgentResponses[keyof GetLogsForAgentResponses]

export type ClientOptions = {
    baseUrl: "http://localhost:8081" | (string & {})
}
